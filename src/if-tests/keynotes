Chapter 10: Key Notes.

ZIP: Can mix arrays in tuples for make a parallel iteration
EXAMPLES:
===================================================
>>> L1 = [1,2,3,4]
>>> L2 = [5,6,7,8]

>>> zip(L1,L2)
[(1, 5), (2, 6), (3, 7), (4, 8)]

>>> for (x,y) in zip(L1, L2):
...     print x, y, '--', x+y
...
1 5 -- 6
2 6 -- 8
3 7 -- 10
4 8 -- 12

This can be useful for maps:
When we already have a list of keys and values, and we just want to
build a map with those values, we can use the ZIP function to bind
them and assign them into a map

keys = ["super","man"]
uperMap = values = [1,2]

superMap = {}
for (k,v) in zip(keys, values): superMap[k] = v

OR THERE IS SOMETHING SOOOO BEAUTIFUL!
D3 = dict(zip(keys, vals))


===================================================
Structure of a for loop

for <target> in <object>:   # Assign object items to target.
    <statements>            # Repeated loop body: use target
else:
    <statements>            # If we didn't hit a 'break'

A string can be iterable

